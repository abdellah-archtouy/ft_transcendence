* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  line-height: 1;
}

#root {
  height: 100%;
  width: 100%;
}

@supports ((-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px))) {
  .blur-box {
    backdrop-filter: blur(10px);
  }
}

body {
  background-color: black;
  height: 100svh;
  width: 100svw;
  overflow-x: hidden;
}

.App {
  min-height: 100svh;
  width: 100%;
  display: flex;
  align-items: center;
  flex-direction: column;
  font-family: 'URW Geometric';
  font-weight: 600;
  color: #B2B2B2;
}

.main {
  display: flex;
  flex-direction: column;
  flex: 1;
  width: 100%;
  margin-bottom: clamp(6.875rem, 4.688vw + 5rem, 12.5rem); 
  /*
    i add the margin bottom here because we wanna avoid hard coding in the app.js
    and to deal with the margin-bottom in your page you must add this rule of css before start styling
    .main:has(.your-container-name) {
      margin-bottom = 0; here you override that rule and give it 0
    }
  */
}

@keyframes vibrate {
  0% {
    transform: rotate(0deg);
  }

  10% {
    transform: rotate(-5deg);
  }

  20% {
    transform: rotate(5deg);
  }

  30% {
    transform: rotate(0deg);
  }

  40% {
    transform: rotate(5deg);
  }

  50% {
    transform: rotate(-5deg);
  }

  60% {
    transform: rotate(0deg);
  }

  70% {
    transform: rotate(-5deg);
  }

  80% {
    transform: rotate(5deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

@keyframes textanimation {
  0% {
    text-shadow: 0px 0px 0px #B2B2B2;
  }

  50% {
    text-shadow: 0px 0px 10px #B2B2B2;
  }

  100% {
    text-shadow: 0px 0px 0px #B2B2B2;
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes fade-out {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes hoverScale {
  0% {
      transform:scale(1, 1);
  }
  50% {
      transform:scale(1.05, 1.05);
  }
  100% {
      transform:scale(1.025, 1.025);
  }
}

@media (max-width: 1024px) {
  
}