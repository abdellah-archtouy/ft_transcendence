version: '3.9'

services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my-network
    restart: always



  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf  # Mount the NGINX config
      - ./nginx/certs:/etc/ssl
      - frontend_build:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - my-network
    restart: always



  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - my-network
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
      - "465:465"
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./nginx/certs:/etc/ssl
    depends_on:
      - postgres
      - redis
    networks:
      - my-network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile  # React Dockerfile
    container_name: frontend
    volumes:
      - frontend_build:/app/build
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - my-network
    restart: unless-stopped

networks:
  my-network:
    driver: bridge

volumes:
  frontend_build:
  database:
    driver: local
